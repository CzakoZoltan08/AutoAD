algorithm_name,dataset,anomaly_type,noise_type,labeled_anomaly_ratio,noise_ratio,apply_data_scaling,scaler,apply_data_rebalancing,rebalance_pipeline,apply_missing_data_filling,fill_algorithm,apply_dimensionality_reduction,dimensinality_reduction_algorithm,roc_auc,recall,precision,accuracy,f1-score,exception
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.NONE,1.0,0.0,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.NONE,1.0,0.1,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.NONE,1.0,0.2,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.NONE,1.0,0.3,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.NONE,1.0,0.4,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.NONE,1.0,0.5,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.NONE,1.0,0.6,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.NONE,1.0,0.7,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.NONE,1.0,0.8,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.NONE,1.0,0.9,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.DUPLICATES,1.0,0.0,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.DUPLICATES,1.0,0.1,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.DUPLICATES,1.0,0.2,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.DUPLICATES,1.0,0.3,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.DUPLICATES,1.0,0.4,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.DUPLICATES,1.0,0.5,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.DUPLICATES,1.0,0.6,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.DUPLICATES,1.0,0.7,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.DUPLICATES,1.0,0.8,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.DUPLICATES,1.0,0.9,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.IRRELEVANT_FEATURES,1.0,0.0,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.IRRELEVANT_FEATURES,1.0,0.1,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.IRRELEVANT_FEATURES,1.0,0.2,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.IRRELEVANT_FEATURES,1.0,0.3,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.IRRELEVANT_FEATURES,1.0,0.4,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.IRRELEVANT_FEATURES,1.0,0.5,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.IRRELEVANT_FEATURES,1.0,0.6,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.IRRELEVANT_FEATURES,1.0,0.7,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.IRRELEVANT_FEATURES,1.0,0.8,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.IRRELEVANT_FEATURES,1.0,0.9,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.LABEL_ERROR,1.0,0.0,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.LABEL_ERROR,1.0,0.1,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5455,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.LABEL_ERROR,1.0,0.2,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.5818,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.LABEL_ERROR,1.0,0.3,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.4727,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.LABEL_ERROR,1.0,0.4,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.4727,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.LABEL_ERROR,1.0,0.5,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.4909,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.LABEL_ERROR,1.0,0.6,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.4909,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.LABEL_ERROR,1.0,0.7,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.4182,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.LABEL_ERROR,1.0,0.8,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.4364,0.0,
XGBOOST CLASSIFIER,45_wine,AnomalyType.LOCAL,NoiseType.LABEL_ERROR,1.0,0.9,True,"(MinMaxScaler(),)",False,"<bound method Pipeline.get_params of Pipeline(steps=[('u', RandomUnderSampler())])>",False,Zero,False,PCA,0.5,0.0,0.0,0.4545,0.0,
